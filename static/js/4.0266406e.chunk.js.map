{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","className","classes","dialog","active","id","activeClassName","name","Message","message","AddMessageForm","required","value","undefined","onSubmit","sendNewMessage","form","handleSubmit","validate","component","Textarea","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","el","key","messagesElements","messages","dialogsList","messagesList","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"kOAIMA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAUtC,OAFmCM,YAAQX,EAARW,CAAoCL,K,mBCjB3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,gC,mBCA/GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,8HCU5CC,EARA,SAACN,GACZ,OACI,oBAAIO,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA9C,SACI,cAAC,IAAD,CAAST,GAAE,mBAAcD,EAAMW,IAAMC,gBAAiBJ,IAAQE,OAA9D,SAAuEV,EAAMa,U,iBCE1EC,EANC,SAACd,GACb,OACI,oBAAIO,UAAWC,IAAQO,QAAvB,SAAiCf,EAAMe,W,gBCgCzCC,EAAiB,SAAChB,GAEpB,IAAMiB,EAAW,SAACC,GAAD,OAAYA,OAAQC,EAAY,YAEjD,OACI,cAAC,IAAD,CAAMC,SAAUpB,EAAMqB,eAAtB,SACK,SAACC,GAAD,OACG,uBAAMF,SAAUE,EAAKC,aAArB,UACI,8BACI,cAAC,IAAD,CAAOV,KAAK,iBAAiBW,SAAUP,EAAUQ,UAAWC,IAAUC,YAAY,yBAEtF,8BACI,2DAQTC,EA/CC,SAAC5B,GAEb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAQpB,KAAMoB,EAAGpB,KAAmBF,GAAIsB,EAAGtB,IAAfsB,EAAGC,QAC3EC,EAAmB1C,EAAM2C,SAASJ,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAASlB,QAASkB,EAAGlB,SAAckB,EAAGC,QAMxF,OACI,sBAAK3B,UAAWC,IAAQuB,QAAxB,UACI,oBAAIxB,UAAWC,IAAQ6B,YAAvB,SACKP,IAGL,gCACI,oBAAIvB,UAAWC,IAAQ8B,aAAvB,SACKH,IAEL,cAAC,EAAD,CAAgBd,eAdL,SAACkB,GACpBvC,EAAMwC,YAAYD,EAAOE,0B,wBCIlBC,sBAAQvC,aAbD,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAGF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACzB,GACV4B,EAASC,YAAmB7B,SAK6BnB,IAAtD8C,CAAwEd","file":"static/js/4.0266406e.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsList\":\"Dialogs_dialogsList__137kM\",\"messagesList\":\"Dialogs_messagesList__3P5tp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1323i\",\"active\":\"Dialog_active__2fc4o\"};","import classes from \"./Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props) => {\n    return (\n        <li className={classes.dialog + \" \" + classes.active}>\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>{props.name}</NavLink>\n        </li>\n    )\n}\n\nexport default Dialog;","import classes from \"./Message.module.css\";\n\nconst Message = (props) => {\n    return (\n        <li className={classes.message}>{props.message}</li>\n    )\n}\n\nexport default Message;","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\n\nimport Dialog from './Dialog/Dialog';\nimport Message from \"./Message/Message\";\nimport {Form, Field} from \"react-final-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map((el) => <Dialog name={el.name} key={el.key} id={el.id}/>);\n    let messagesElements = state.messages.map((el) => <Message message={el.message} key={el.key}/>);\n\n    const sendNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <ul className={classes.dialogsList}>\n                {dialogsElements}\n            </ul>\n\n            <div>\n                <ul className={classes.messagesList}>\n                    {messagesElements}\n                </ul>\n                <AddMessageForm sendNewMessage={sendNewMessage} />\n            </div>\n        </div>\n    )\n};\n\nconst AddMessageForm = (props) => {\n\n    const required = (value) => (value ? undefined : \"Required\");\n\n    return (\n        <Form onSubmit={props.sendNewMessage}>\n            {(form) => (\n                <form onSubmit={form.handleSubmit}>\n                    <div>\n                        <Field name='newMessageBody' validate={required} component={Textarea} placeholder='Enter your message' />\n                    </div>\n                    <div>\n                        <button>Send message</button>\n                    </div>\n                </form>\n            )}\n        </Form>\n    )\n}\n\nexport default Dialogs;\n","import React from \"react\";\nimport {sendMessageCreator} from \"../../redux/reducers/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (message) => {\n            dispatch(sendMessageCreator(message));\n        },\n    }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\n"],"sourceRoot":""}